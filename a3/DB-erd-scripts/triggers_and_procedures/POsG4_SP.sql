DELIMITER //
CREATE PROCEDURE `PROC_CREATE_PO_G4`(IN inClientCompIdG4 INT(11), IN inPartNoG4 INT(11), IN inQtyG4 INT(11))
BEGIN
    DECLARE PRICE DECIMAL(19,4);
    DECLARE PONO INT;
    -- DEFINE AN ERROR HANDLING. FIRST ROLLBACK THEN RETHROW THE ERROR TO THE REQUESTOR APPLICATION.
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING, NOT FOUND
    BEGIN
		ROLLBACK;
        RESIGNAL;
	END;
    -- TRANSACTION
	START TRANSACTION;
    IF ISNULL(inClientCompIdG4) OR ISNULL(inPartNoG4) OR ISNULL(inQtyG4) THEN
		-- USER DEFINED ERROR (NULL VALUE IS NOT ACCEPTED).
		SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT='Null value is not accepted.';
    ELSE
        -- INSERT THE PO INTO THE POG4 TABLE.
        INSERT INTO POsG4 (clientCompIdG4) VALUES (inClientCompIdG4);
        -- CALCULATE THE LINE PRICE FOR THE PART QUANTITY
        SELECT currentPriceG4 INTO PRICE FROM PartsG4 WHERE partNoG4=inPartNoG4;
        -- SELECT THE PO NUMBER TO INSERT THE POLINE INTO THE POLINEG4 TABLE.
        SELECT poNoG4 INTO PONO FROM POsG4 ORDER BY poNoG4 DESC LIMIT 1;
        INSERT INTO POLinesG4 (poNoG4, partNoG4, linePriceG4, qtyG4) VALUES (PONO, inPartNoG4, PRICE * inQtyG4, inQtyG4);
        -- RETURN THE PURCHASE ORDER INFORMATION BACK TO THE REQUESTOR.
	    SELECT * FROM POsG4 WHERE poNoG4=PONO;
    END IF;
    -- COMMIT THE ENTIRE CHANGE.
    COMMIT;
END //
DELIMITER ;